version: '3.1'

services:
    server:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile_API
        container_name: API
        command: sh -c 'python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver ${server_HostPort}'
        volumes:
            - ./:/app
        ports:
            - 8900:8900
        networks:
            - frontend
            - backend
        environment:
            # for django-server connection to not to localhost-MySQL (as in settings.py) but to container-MySQL
            - DATABASE_HOST=db
        links:
            - db
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://${server_HostPort}/api/posts/']
            interval: 5s
            timeout: 3s
            retries: 3

    client:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile_CLIENT
        container_name: Client
        command: sh -c 'npm run start'
        ports:
            - 3000:3000
        networks:
            - frontend
        links:
            - server
        depends_on:
            server:
                condition: service_healthy

    db:
        restart: always
        image: mysql:8.0
        container_name: db
        env_file:
            - .env
        ports:
            - 3307:3306
        networks:
            - backend
        volumes:
            - ./db_data:/var/lib/mysql
            - ./IT_Blog.sql:/docker-entrypoint-initdb.d/IT_Blog.sql
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1']
            interval: 5s
            timeout: 3s
            retries: 3
volumes:
    db_data:

networks:
    backend:
    frontend:
