version: '3.8'

services:
    # ------------------------------------------------------webserver(nginx)
    webserver:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile__webserver
        container_name: webserver
        volumes:
            - ./staticfiles:/app/staticfiles
            - ./mediafiles:/app/mediafiles
        ports:
            - 8080:80
        networks:
            - frontend
        links:
            - client
        depends_on:
            - client
    # ------------------------------------------------------client(nuxtjs)
    client:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile__client
        container_name: client
        command: >
            sh -c "npm run start"
        ports:
            - 3001:3000
        expose:
            - 3000
        networks:
            - frontend
        environment:
            - HOST=0.0.0.0
            - PORT=3000
        links:
            - api
        depends_on:
            api:
                condition: service_healthy

    # ------------------------------------------------------api(django rest framework)
    api:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile__api
        container_name: api
        command: >
            sh -c "python3 manage.py makemigrations
            && python3 manage.py migrate
            && python3 manage.py collectstatic --noinput 
            && gunicorn --log-file gunicorn_logs/error.log --access-logfile gunicorn_logs/access.log Blog.wsgi:application -b ${server_HostPort_1}"
        volumes:
            - ./staticfiles:/app/API/staticfiles
            - ./mediafiles:/app/API/mediafiles
            - ./gunicorn_logs:/app/API/gunicorn_logs
            - ./django_logs:/app/API/django_logs
        ports:
            - 8001:8000
        expose:
            - 8000
        networks:
            - backend
            - frontend
        environment:
            # for django-server connection to not to localhost-MySQL (as in settings.py) but to container-MySQL
            - DATABASE_HOST=db
        links:
            - db
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://${server_HostPort_1}/api/test/']
            timeout: 15s
            interval: 10s
            retries: 3
    # ------------------------------------------------------db(mysql)
    db:
        restart: always
        image: mysql:8.0
        container_name: db
        env_file:
            - .env
        ports:
            - 3307:3306
        expose:
            - 3306
        networks:
            - backend
        volumes:
            - ./IT_Blog.sql:/docker-entrypoint-initdb.d/IT_Blog.sql
            - ./db_data:/var/lib/mysql
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1']
            timeout: 15s
            interval: 5s
            retries: 3
    # ------------------------------------------------------other(volumes && networks)
volumes:
    db_data:
    staticfiles:
    mediafiles:
    gunicorn_logs:
    django_logs:

networks:
    backend:
    frontend:
